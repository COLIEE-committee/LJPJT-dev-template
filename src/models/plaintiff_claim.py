from dataclasses import asdict, dataclass
from typing import Any, TypeVar

from src.models._util import dict_factory

_PlaintiffClaim = TypeVar("_PlaintiffClaim", bound="PlaintiffClaim")


@dataclass
class PlaintiffClaim:
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    PlaintiffClaim - a model defined in OpenAPI

        id: The id of this PlaintiffClaim.
        description: The description of this PlaintiffClaim.
        is_accepted: The is_accepted of this PlaintiffClaim.
    """

    id: str
    description: str
    is_accepted: bool | None

    @classmethod
    def from_dict(cls: type[_PlaintiffClaim], input: dict[str, Any]) -> _PlaintiffClaim:
        return cls(
            id=input["id"],
            description=input["description"],
            is_accepted=input["is_accepted"],
        )

    def to_dict(self) -> dict[str, Any]:
        return asdict(self, dict_factory=dict_factory)
